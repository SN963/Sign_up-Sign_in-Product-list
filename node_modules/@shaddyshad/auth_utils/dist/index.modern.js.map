{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import React, {createContext, useContext, useState} from 'react'\nimport * as Realm from 'realm-web'\n\n/**\n * Auth context stores the auth data and methods \n */\nconst authContext = createContext()\n\n/**\n * Provider object to allow access in the component tree\n */\n\nexport const AuthContextProvider = ({children, appId}) => {\n    const auth = provideAuth(appId);\n    \n    return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\n\n/**\n * API \n */\nconst provideAuth = appId => {\n    const app = new Realm.App({id: appId})\n\n    const [user, setUser] = useState(null)\n\n    const login = async (email, password) => {\n        const user = await app.logIn(Realm.Credentials.emailPassword(email, password));\n\n        setUser(user)\n    }\n\n    /**\n     * Check if is logged in \n     */\n\n     const isLoggedIn = () => app.currentUser &&  app.currentUser.isLoggedIn\n\n     /**\n      * Logout action\n      */\n     const logout = async () => await app.currentUser.logOut()\n\n     /**\n      * Send a password reset request\n      */\n     const sendPasswordReset = async email => await app.emailPasswordAuth.sendResetPasswordEmail(email)\n\n     /**\n      * Confirm password reset from tokenId and tokenSecret\n      * \n      * tokenId and token are retrieved from the url parameters\n      */\n     const resetPassword = async (email, password) => {\n        const params = new URLSearchParams(window.location.search)\n        const token = params.get('token')\n        const tokenId = params.get('tokenId')\n\n        if(!token || !tokenId){\n            throw new Error(\"You can only call resetPassword() if the user followed a confirmation email link\")\n        }\n\n        // call the reset function \n        return app.emailPasswordAuth.callResetPasswordFunction(email, password)\n     }\n\n     /** get the current user */\n     const currentUser = () => app.currentUser\n\n    return {\n        user,\n        app,\n        login,\n        isLoggedIn,\n        logout,\n        sendPasswordReset,          // initiate password reset\n        resetPassword,\n        currentUser\n    }\n}\n\n/**\n * Utility to access auth API\n */\n\nexport const useAuth = () => useContext(authContext)"],"names":["authContext","createContext","AuthContextProvider","children","appId","auth","provideAuth","app","Realm","id","useState","user","setUser","login","email","password","logIn","emailPassword","isLoggedIn","currentUser","logout","logOut","sendPasswordReset","emailPasswordAuth","sendResetPasswordEmail","resetPassword","params","URLSearchParams","window","location","search","token","get","tokenId","Error","callResetPasswordFunction","useAuth","useContext"],"mappings":";;;AAMA,IAAMA,WAAW,GAAGC,aAAa,EAAjC;IAMaC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAuB;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACtD,MAAMC,IAAI,GAAGC,WAAW,CAACF,KAAD,CAAxB;AAEA,sBAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC;AAA7B,KAAoCF,QAApC,CAAP;AACH;;AAMD,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAF,KAAK,EAAI;AACzB,MAAMG,GAAG,GAAG,IAAIC,GAAJ,CAAc;AAACC,IAAAA,EAAE,EAAEL;AAAL,GAAd,CAAZ;;AADyB,kBAGDM,QAAQ,CAAC,IAAD,CAHP;AAAA,MAGlBC,IAHkB;AAAA,MAGZC,OAHY;;AAKzB,MAAMC,KAAK,YAALA,KAAK,CAAUC,KAAV,EAAiBC,QAAjB;AAAA,QAA8B;AAAA,6BAClBR,GAAG,CAACS,KAAJ,CAAUR,WAAA,CAAkBS,aAAlB,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAV,CADkB,iBAC/BJ,IAD+B;AAGrCC,QAAAA,OAAO,CAACD,IAAD,CAAP;AAHqC;AAIxC,KAJU;AAAA;AAAA;AAAA,GAAX;;AAUC,MAAMO,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMX,GAAG,CAACY,WAAJ,IAAoBZ,GAAG,CAACY,WAAJ,CAAgBD,UAA1C;AAAA,GAAnB;;AAKA,MAAME,MAAM,YAANA,MAAM;AAAA;AAAA,6BAAqBb,GAAG,CAACY,WAAJ,CAAgBE,MAAhB,EAArB;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAKA,MAAMC,iBAAiB,YAAjBA,iBAAiB,CAASR,KAAT;AAAA;AAAA,6BAAwBP,GAAG,CAACgB,iBAAJ,CAAsBC,sBAAtB,CAA6CV,KAA7C,CAAxB;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAOA,MAAMW,aAAa,YAAbA,aAAa,CAAUX,KAAV,EAAiBC,QAAjB;AAAA,QAA8B;AAC9C,UAAMW,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAf;AACA,UAAMC,KAAK,GAAGL,MAAM,CAACM,GAAP,CAAW,OAAX,CAAd;AACA,UAAMC,OAAO,GAAGP,MAAM,CAACM,GAAP,CAAW,SAAX,CAAhB;;AAEA,UAAG,CAACD,KAAD,IAAU,CAACE,OAAd,EAAsB;AAClB,cAAM,IAAIC,KAAJ,CAAU,kFAAV,CAAN;AACH;;AAGD,6BAAO3B,GAAG,CAACgB,iBAAJ,CAAsBY,yBAAtB,CAAgDrB,KAAhD,EAAuDC,QAAvD,CAAP;AACF,KAXkB;AAAA;AAAA;AAAA,GAAnB;;AAcA,MAAMI,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMZ,GAAG,CAACY,WAAV;AAAA,GAApB;;AAED,SAAO;AACHR,IAAAA,IAAI,EAAJA,IADG;AAEHJ,IAAAA,GAAG,EAAHA,GAFG;AAGHM,IAAAA,KAAK,EAALA,KAHG;AAIHK,IAAAA,UAAU,EAAVA,UAJG;AAKHE,IAAAA,MAAM,EAANA,MALG;AAMHE,IAAAA,iBAAiB,EAAjBA,iBANG;AAOHG,IAAAA,aAAa,EAAbA,aAPG;AAQHN,IAAAA,WAAW,EAAXA;AARG,GAAP;AAUH,CA1DD;;IAgEaiB,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAMC,UAAU,CAACrC,WAAD,CAAhB;AAAA;;;;"}